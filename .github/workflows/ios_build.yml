# .github/workflows/ios-build.yml
name: iOS Build and Deploy
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: macos-latest # Uses macOS runner with Xcode pre-installed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Node.js 22
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Fastlane
        run: brew install fastlane
      # Install dependencies
      - name: Install npm dependencies
        run: npm install

      - name: Install pod dependencies
        run: cd ios && pod install
      # Build the iOS app
      #- name: Build iOS App
      #  run: cd ios && fastlane build

      - name: Build iOS App
        run: |
            cd ios
            xcodebuild clean build \
                        -workspace IosGithubActionBuild.xcworkspace \
                        -scheme IosGithubActionBuild \
                        -configuration Debug \
                        -destination 'generic/platform=iOS' \
                        -derivedDataPath ./build \
                        OTHER_SWIFT_FLAGS="-suppress-warnings" \
                        CODE_SIGNING_ALLOWED="NO" | xcbeautify
      - name: Archive iOS App
        run: |
                cd ios
                 xcodebuild -exportArchive \
                        -archivePath ./build/IosGithubActionBuild.xcarchive \
                        -exportPath ./export
                        -exportOptionsPlist <(cat <<EOF
                                <?xml version="1.0" encoding="UTF-8"?>
                                <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
                                <plist version="1.0">
                                <dict>
                                    <key>method</key>
                                    <string>app-store</string>
                                    <key>teamID</key>
                                    <string>"Team ASTRO"/string>
                                    <key>uploadSymbols</key>
                                    <true/>
                                    <key>uploadBitcode</key>
                                    <true/>
                                </dict>
                                </plist>
                                EOF
                                )
                  ls build
                        
            
