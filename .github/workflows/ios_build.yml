# .github/workflows/ios-build.yml
name: iOS Build and Deploy
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: macos-latest # Uses macOS runner with Xcode pre-installed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Node.js 22
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Fastlane
        run: brew install fastlane
      # Install dependencies
      - name: Install npm dependencies
        run: npm install

      - name: Install pod dependencies
        run: cd ios && pod install
      # Build the iOS app
      #- name: Build iOS App
      #  run: cd ios && fastlane build
      - name: Set up provisioning profile
        run: mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles && echo "$PROVISIONING_PROFILE" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision
        env:
          PROVISIONING_PROFILE: ${{ secrets.PROVISIONING_PROFILE }}

      - name: Set up certificate
        run: |
          echo "$CERTIFICATE_P12" | base64 --decode > certificate.p12
          security create-keychain -p "github" build.keychain
          security import certificate.p12 -k ~/Library/Keychains/build.keychain -P "$CERT_PASSWORD" -T /usr/bin/codesign
          security list-keychains -s ~/Library/Keychains/build.keychain
          security list-keychains -s build.keychain
          security set-keychain-settings build.keychain
        env:
          CERTIFICATE_P12: ${{ secrets.CERTIFICATE_P12 }}
          CERT_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}

      # - name: Build iOS App
      #   run: |
      #       cd ios
      #       xcodebuild clean build \
      #                   -workspace IosGithubActionBuild.xcworkspace \
      #                   -scheme IosGithubActionBuild \
      #                   -configuration Debug \
      #                   -destination 'generic/platform=iOS' \
      #                   -derivedDataPath ./build \
      #                   OTHER_SWIFT_FLAGS="-suppress-warnings" \
      #                   CODE_SIGNING_ALLOWED="NO" | xcbeautify -q
      #       ls build

      - name: Build iOS App
        env:
          TEAM_ID: ${{ secrets.GYM_EXPORT_TEAM_ID }}
        run: |
          cd ios
          export GYM_SCHEME="IosGithubActionBuild"
          export GYM_DESTINATION="generic/platform=iOS"
          export GYM_WORKSPACE="IosGithubActionBuild.xcworkspace"
          export GYM_EXPORT_METHOD="app-store"
          export GYM_OUTPUT_DIRECTORY="./build"
          export GYM_OUTPUT_NAME="GenericBuild.ipa"
          export GYM_CLEAN=true
          fastlane run build_ios_app development_team:"$TEAM_ID"
          
      - name:  Ios App Upload
        run: |
          fastlane run app_store_connect_api_key \
          key_id:${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }} \
          issuer_id:${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }} \
          key_content:${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}

          fastlane run upload_to_testflight \
            ipa:"./build/GenericBuild.ipa"

          
      - name: Cleanup
        run: |
          # Remove the decrypted certificate and provisioning profile
          rm -rf certificate.p12 profile.mobileprovision
          # Delete the keychain after the build process
          security delete-keychain build.keychain
            
